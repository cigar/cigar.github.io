name: deploy blog to github pages # 名字自己随便定义

on:
  push:
    branches:
      - main  # 这里的意思是当 main分支发生push的时候，运行下面的jobs，这里先改为github-actions
  # 允许您手动从“Actions”标签运行此工作流程
  workflow_dispatch:

# 设置GITHUB_TOKEN的权限，以允许部署到GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy: # 任务名自定义
    runs-on: ubuntu-latest  # 在什么环境运行任务
    steps:
      - uses: actions/checkout@v2  # 引用actions/checkout这个action，与所在的github仓库同名
        with:
          #submodules: true  # Fetch Hugo themes (true OR recursive) 获取submodule主题
          submodules: recursive  # Fetch Hugo themes (true OR recursive) 获取submodule主题
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo  # 任务名自定义
        uses: peaceiris/actions-hugo@v2  # hugo官方提供的action，用于在任务环境中获取hugo
        with:
          hugo-version: 'latest'  # 获取最新版本的hugo
          # extended: true

      - name: Build
        run: hugo --minify  # 使用hugo构建静态网页,--minify参数用于最小化生成的 HTML、CSS 和 JavaScript 文件。

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3  # 一个自动发布github pages的action
        with:
          # github_token: ${{ secrets.GITHUB_TOKEN }} 该项适用于发布到源码相同repo的情况，不能用于发布到其他repo
          external_repository: cigar/cigar.github.io  # 发布到哪个repo
          personal_token: ${{ secrets.AUDODEPLOYBLOG }}  # 发布到其他repo需要引用生成的personal access token的名字
          publish_dir: ./public  # 注意这里指的是要发布哪个文件夹的内容，而不是指发布到目的仓库的什么位置，因为hugo默认生成静态网页到public文件夹，所以这里发布public文件夹里的内容
          publish_branch: main  # 发布到哪个branch
